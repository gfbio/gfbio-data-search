################################################################################
# Server Setup                                                                 #
################################################################################

# HOST: Defines the hostname where the server is hosted. 
# Typically, this is set to 'localhost' for development environments. 
# For production, replace 'localhost' with your actual server's hostname or IP address.
HOST="localhost"

# APP_PORT: Specifies the port number on which the server listens for requests. 
# The default port for development is usually 3000, but can be changed as needed.
# Ensure this port is open and not being used by other services on your machine or server.
APP_PORT=3000

# SESSION_SECRET: A secret key used for signing and/or encrypting cookies set by the application to maintain session state.
# It's important this is a complex and unique string to prevent session hijacking or forgery.
# In production, use a long, random and secure string.
SESSION_SECRET="secret"

########################
#  vocabulary service  #
########################

# The gfbio terminology service. It provides terminology enrichment for
# biodiversity related concepts. It is used for the semantic search.
GFBIOTS_URL="https://dev-gfbio.bgbm.org/api/terminologies/"
TERMINOLOGY_SUGGEST_URL="https://dev-gfbio.bgbm.org/api/terminologies/suggest/"

################################################################################
# Elasticsearch Configuration                                                  #
# This section contains settings related to the Elasticsearch service, which  #
# is used for indexing and searching data.                                     #
################################################################################

# ELASTIC_INDEX_URL: The URL where your Elasticsearch instance is accessible.
# This should include the protocol (http or https) and the hostname or IP address.
# Do not include the port in this variable; it is defined separately.
# Example for development: "http://localhost" or "http://elasticsearch-server".
ELASTIC_INDEX_URL="http://index"

# ELASTIC_INDEX_NAME: The name of the Elasticsearch index to use.
# This is where your data will be stored and indexed in Elasticsearch.
# Typically, you might use a different index name for development, staging, and production.
# Example: "myapp-dev" for development, "myapp-prod" for production.
ELASTIC_INDEX_NAME="search-dev"

# ELASTIC_INDEX_PORT: The port on which your Elasticsearch instance is running.
# The default port for Elasticsearch is usually 9200.
# Make sure this matches the port configuration of your Elasticsearch server.
ELASTIC_INDEX_PORT="9200"

################################################################################
# Keycloak Configuration                                                      #
# This section defines settings for integrating with Keycloak, an open-source #
# Identity and Access Management solution. These settings are necessary for   #
# securing your application with authentication and authorization.            #
################################################################################

# Keycloak_ClientId: The client identifier for your application as registered in Keycloak.
# This is unique to your application and is used to identify it within the Keycloak server.
# In development, you might use a different client ID than in production.
# Example: 'dev-app' for development or 'prod-app' for production environments.
Keycloak_ClientId="dev-NFDI4Biodiversity"

# Keycloak_BearerOnly: A boolean value indicating whether the application acts as a bearer-only service.
# If set to 'true', the server expects only bearer token authorization and will not initiate login or sessions.
# Set this to 'false' if the application should handle logins and manage sessions (typical for web applications).
Keycloak_BearerOnly=false

# Keycloak_ServerUrl: The URL of the Keycloak server. This is where your application will redirect 
# for authentication and where it will communicate with for token validation.
# This should include the full URL, typically ending with "/auth".
# Example: "https://keycloak.example.com/auth".
Keycloak_ServerUrl="https://keycloak.sso.gwdg.de/auth"

# Keycloak_Realm: The realm within Keycloak where your client is defined.
# Realms in Keycloak allow you to manage different sets of users, credentials, roles, and groups.
# Each realm is isolated from one another.
# Example: 'MyAppRealm' for your application-specific realm.
Keycloak_Realm="GFBio"

# Keycloak_Secret: The secret key associated with your Keycloak client.
# This is used to secure communication between your app and the Keycloak server.
# Never expose this secret publicly and ensure it is kept safe.
# In production, use a long, complex, and unique string.
Keycloak_Secret="keycloak secret"

################################################################################
# MySQL Database Configuration                                                #
# This section outlines the necessary settings to connect to your MySQL       #
# database. These settings are crucial for the application's data storage and #
# retrieval processes.                                                        #
################################################################################

# MySQL_Host: The hostname or IP address where your MySQL database server is running.
# For local development environments, this is typically set to 'localhost'.
# In a production environment, this would be the address of your MySQL server.
# Example: 'localhost' for local development or '192.168.1.100' for a remote server.
MySQL_Host="localhost"

# MySQL_Port: The port number on which your MySQL server is listening.
# The default MySQL port is 3306. Only change this if your MySQL server uses a different port.
MySQL_Port=3306

# MySQL_User: The username used to connect to the MySQL database.
# This should have the necessary privileges for performing actions in the specified database.
# Example: 'root' for development environments. Use a less-privileged user in production.
MySQL_User="root"

# MySQL_Password: The password associated with the MySQL_User.
# Ensure this password is kept secure, especially in production environments.
# Example: 'password' for development. Use a strong, unique password in production.
MySQL_Password="rootpw"

# MySQL_Database: The name of the database to which your application will connect.
# This is where your application's data will be stored and retrieved from.
# Example: 'myapp_dev' for development, 'myapp_prod' for production environments.
MySQL_Database="search"

################################################################################
# Collections Service Configuration                                           #
# This section is dedicated to settings for the Collections service, a        #
# generic serialized data storage utility designed to facilitate the transfer #
# of data between different services. These settings include the API endpoint #
# and a required token for authentication.                                     #
################################################################################

# COLLECTIONS_API_URL: The base URL for the Collections API.
# This is the endpoint your application will use to communicate with the Collections service.
# It typically includes the protocol (https), the domain, and the base path to the API.
# Ensure the URL ends with a trailing slash for proper path resolution.
# Example: "https://collections.example.com/api/collections/".
COLLECTIONS_API_URL="https://collections.gfbio.dev/api/collections/"

# COLLECTIONS_API_TOKEN: The authentication token required to access the Collections API.
# This token is used to ensure that only authorized users and services can access the Collections data.
# It should be kept secure and not exposed publicly. In a production environment, use a secure method
# to generate and manage this token.
# Example: A long, random string that is kept confidential.
COLLECTIONS_API_TOKEN="token"

################################################################################
# VAT System Configuration                                                     #
# The VAT (Visualization, Analysis, and Transformation) system is part of the #
# GFBio project and is designed to facilitate the reuse of archived           #
# biodiversity data from GFBio. It allows for the combination of this data    #
# with various spatiotemporal data from other sources. Additionally, the VAT  #
# system provides spatiotemporal operations such as filters and expressions,  #
# as well as multiple data visualizations in the form of maps, tables, and    #
# plots. GFBio offers a public version available at vat.gfbio.org.             #
################################################################################

# VAT_ROOT_URL: The base URL for accessing the VAT system.
# This is the endpoint your application will use to communicate with the VAT services.
# It includes the protocol (https) and the domain. Make sure it is correctly pointed
# to the VAT system's API for the environment you are working with.
# Example: "https://vat.example.com" for a custom deployment.
VAT_ROOT_URL="https://vat.gfbio.dev"
