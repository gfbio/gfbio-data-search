# stages:
#   - build_and_update_staging
#
# build_and_update_staging:
#   stage: build_and_update_staging
#   variables:
#     GIT_SUBMODULE_STRATEGY: normal
#   script:
#     - cp /home/gitlab-runner/.search-gfbio.env ./.env
#     - docker-compose -f staging.yml build --no-cache --force-rm
#     - docker-compose -f staging.yml down
#     - docker-compose -f staging.yml up -d
#   environment:
#     name: production
#     url: https://search.gfbio.dev/
#   rules:
#     - if: '$CI_COMMIT_BRANCH == "main"'
#   tags:
#     - docker-lxc
#
# according to https://gitlab.gwdg.de/gfbio/cicd -------------------------------
# before_script:
#   - docker info
include:
  - project: gfbio/cicd
    file:
      - ".create_merge_request_v2.yml"
      - ".tag_release.yml"
      - ".web-test.yml"

stages:
  - create_merge_request
  - tag_release_check
  - tag_release
  - web_test_check
  - web_test_update
  - web_test_update_env_url
  - web_test_stop

create_merge_request:
  tags:
    - dev-denbi
  variables:
    APPROVERS: "3834 6157 3832"
    REVIEWERS: "2370 3999"

tag_release_check:
  variables:
    MAIN_BRANCH_NAME: "main"
  tags:
    - dev-denbi

tag_release:
  variables:
    GIT_SUBMODULE_STRATEGY: normal
  script:
    - cp /home/gitlab-runner/.search-gfbio.env ./.env
    - docker-compose -f staging.yml build --no-cache --force-rm
    - docker-compose -f staging.yml down
    - docker-compose -f staging.yml up -d
  environment:
    name: production
    url: https://search.gfbio.dev
  tags:
    - docker-lxc

web_test_update:
  variables:
    PROJECT_NAME: "gfbio-search"
    COMPOSE_FILE: "web-test.yml"
    CONFIG_FRONTEND: "./DatasetSearchUI/angular/src/environments/environment.ts"
    CONFIG_FRONTEND_PROD: "./DatasetSearchUI/angular/src/environments/environment.prod.ts"
  script:
    # get issue id and test name
    - ISSUE_ID=$(awk -F- '{print $1}' <<< ${CI_COMMIT_REF_NAME})
    - TEST_NAME=$ISSUE_ID-$PROJECT_NAME
    # your custom commands
    # - rm -r ./.envs/
    # - cp -r /home/gitlab-runner/.gfbio_dmp_envs/ ./.envs/
    - cp /home/gitlab-runner/.search-gfbio-tag-release.env ./.env

    # - sed -i s/DJANGO_ALLOWED_HOSTS=.*/DJANGO_ALLOWED_HOSTS=\.$TEST_NAME\.test.gfbio\.dev/g .envs/.production/.django
    - sed -i s/BRANCH/${TEST_NAME}/g $COMPOSE_FILE
    - sed -i s/localhost/gfbio_search_backend/g $CONFIG_FRONTEND
    - sed -i s/localhost/gfbio_search_backend/g $CONFIG_FRONTEND_PROD

    # remove email verification requirements from web-test
    # - sed -i 's/ACCOUNT_EMAIL_VERIFICATION = "mandatory"/ACCOUNT_EMAIL_VERIFICATION = "none"/g' config/settings/base.py
    # set super user credentials from GitLab CI/CD Variables
    # - sed -i s/ADMIN_NICKNAME=/ADMIN_NICKNAME=${ADMIN_NICKNAME}/g ./compose/production/django/ci_start
    # - sed -i s/ADMIN_EMAIL=/ADMIN_EMAIL=${ADMIN_EMAIL}/g ./compose/production/django/ci_start
    # - sed -i s/ADMIN_PASSWORD=/ADMIN_PASSWORD=${ADMIN_PASSWORD}/g ./compose/production/django/ci_start
    # TODO: add dmpt-app specific build and copy commands
    #    - cd ammod_ui && npm i && npm run collect
    #    - cd ../
    - docker-compose -f $COMPOSE_FILE build
    # run docker stack
    - docker stack rm $TEST_NAME || true
    - while [[ $(docker ps | grep $TEST_NAME | wc -l) > 0 ]]; do sleep 1; done
    - docker stack deploy -c $COMPOSE_FILE $TEST_NAME

# will set correct url for environmnet so you can 'view environment' in gitlab
web_test_update_env_url:
  variables:
    PROJECT_NAME: "gfbio-search"

# will stop running environmnet
web_test_stop:
  variables:
    MAIN_BRANCH_NAME: "main"
    PROJECT_NAME: "gfbio-search"
