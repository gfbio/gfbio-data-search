include:
  - project: gfbio/cicd
    file:
      - ".create_merge_request_v3.yml"
      - ".tag_release.yml"
      - ".web_test_v2.yml"
      - ".hotfix_workflow.yml"

stages:
  - check_issue_type
  - create_merge_request
  - create_hotfix_merge_request
  - tag_release_check
  - tag_release
  - web_test_check
  - web_test_update
  - web_test_stop

create_merge_request:
  tags:
    - dev-denbi
  variables:
    PROJECT_NAME: "gfbio-search"
    REVIEWERS: "2370 3999"

tag_release_check:
  variables:
    MAIN_BRANCH_NAME: "production"
  tags:
    - dev-denbi

tag_release:
  variables:
    GIT_SUBMODULE_STRATEGY: normal
  script:
    #- cp /home/gitlab-runner/.search-gfbio.env ./.env
    - cp /home/gitlab-runner/.search-gfbio.node.env  ./search/node/.env
    - cp /home/gitlab-runner/.environment.prod.ts ./search/angular/src/environments/environment.prod.ts
    - docker-compose -f staging.yml build --no-cache --force-rm
    - docker-compose -f staging.yml down
    - docker-compose -f staging.yml up -d
  environment:
    name: production
    url: https://search.gfbio.org
  tags:
    - docker-lxc

web_test_update:
  variables:
    PROJECT_NAME: "gfbio-search"
    COMPOSE_FILE: "web-test.yml"
    # CONFIG_FRONTEND: "./DatasetSearchUIOwn/angular/src/environments/environment.ts"
    # CONFIG_FRONTEND_PROD: "./DatasetSearchUIOwn/angular/src/environments/environment.prod.ts"
  script:
    # get issue id and test name
    - ISSUE_ID=$(awk -F- '{print $2}' <<< ${CI_COMMIT_REF_NAME})
    - TEST_NAME=$ISSUE_ID-$PROJECT_NAME
    # your custom commands
    - cp /home/gitlab-runner/.search-gfbio-tag-release.env ./.env
    - cp /home/gitlab-runner/.search-gfbio.node.env  ./DatasetSearchUIOwn/node/.env
    - cp /home/gitlab-runner/.environment.prod.ts ./DatasetSearchUIOwn/angular/src/environments/environment.prod.ts

    # - sed -i s/DJANGO_ALLOWED_HOSTS=.*/DJANGO_ALLOWED_HOSTS=\.$TEST_NAME\.test.gfbio\.dev/g .envs/.production/.django
    - sed -i s/BRANCH/${TEST_NAME}/g $COMPOSE_FILE
    - docker-compose -f $COMPOSE_FILE build
    # run docker stack
    - docker stack rm $TEST_NAME || true
    - while [[ $(docker ps | grep $TEST_NAME | wc -l) > 0 ]]; do sleep 1; done
    - docker stack deploy -c $COMPOSE_FILE $TEST_NAME

# will stop running environmnet
web_test_stop:
  variables:
    MAIN_BRANCH_NAME: "main"
    PROJECT_NAME: "gfbio-search"
